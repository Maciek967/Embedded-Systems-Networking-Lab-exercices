#include "contiki.h"
#include "net/rime.h"
#include "random.h"

#include "dev/button-sensor.h"
#include "dev/sht11-sensor.h"

#include "dev/leds.h"

#include <stdio.h>
/*---------------------------------------------------------------------------*/
PROCESS(example_broadcast_process, "Broadcast example");

AUTOSTART_PROCESSES(&example_broadcast_process);
/*---------------------------------------------------------------------------*/
//static void
/*broadcast_recv(struct broadcast_conn *c, const rimeaddr_t *from)
{
  printf("broadcast message received from %d.%d: '%s'\n",
         from->u8[0], from->u8[1], (char *)packetbuf_dataptr());
}*/
static const struct broadcast_callbacks broadcast_call;
static struct broadcast_conn broadcast;
/*---------------------------------------------------------------------------*/

PROCESS_THREAD(example_broadcast_process, ev, data)
{
  static struct etimer et;

    int counter = 0;
    int dec;
    static float s = 0;
    int avarageTemperature = 0;
    int val;
  PROCESS_EXITHANDLER(broadcast_close(&broadcast);)

  PROCESS_BEGIN();

  SENSORS_ACTIVATE(button_sensor);

 //broadcast_open(&broadcast, 129, &broadcast_call);

while(counter < 5) 
{
    etimer_set(&et, CLOCK_SECOND * 2);
    SENSORS_ACTIVATE(sht11_sensor);

    PROCESS_WAIT_EVENT_UNTIL(etimer_expired(&et));

     val = sht11_sensor.value(SHT11_SENSOR_TEMP);

        if(avarageTemperature != -1) 
            {
                 s= ((0.01*avarageTemperature) - 39.60);             
            }
        dec = s;
        avarageTemperature = avarageTemperature + dec;
        printf("\nTemperature=%d C\n", dec);

        counter ++;
    }
    avarageTemperature = avarageTemperature/5
    printf("\nAvarage Temperature=%d C\n", avarageTemperature);

  while(1) {

    /* Delay 2-4 seconds */
    //etimer_set(&et, CLOCK_SECOND * 4 + random_rand() % (CLOCK_SECOND * 4));

    PROCESS_WAIT_EVENT_UNTIL((ev==sensors_event) && (data == &button_sensor));

    packetbuf_copyfrom("Maciej", 7);
    broadcast_send(&broadcast);
    printf("Broadcast message sent\n");
  }

  PROCESS_END();
}
/*---------------------------------------------------------------------------*/
